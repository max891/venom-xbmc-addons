#-*- coding: utf-8 -*-
#Venom.
from resources.lib.gui.hoster import cHosterGui 
from resources.lib.handler.hosterHandler import cHosterHandler
from resources.lib.gui.gui import cGui
from resources.lib.gui.guiElement import cGuiElement
from resources.lib.handler.inputParameterHandler import cInputParameterHandler
from resources.lib.handler.outputParameterHandler import cOutputParameterHandler
from resources.lib.handler.requestHandler import cRequestHandler
from resources.lib.config import cConfig
from resources.lib.parser import cParser
from resources.lib.util import cUtil

import xbmc


SITE_IDENTIFIER = 'dpstream'
SITE_NAME = 'dpstream.net'
SITE_DESC = 'Film, Series, Anime'

URL_MAIN = 'http://www.dpstream.net/'

MOVIE_NEWS = (URL_MAIN + 'films', 'showMovies')
MOVIE_MOVIE = (URL_MAIN + 'films', 'showMovies')
MOVIE_HD = (URL_MAIN + 'films', 'showMovies')
MOVIE_GENRES = (True, 'showGenreMovies')

SERIE_NEWS = (URL_MAIN + 'series', 'showSeries')
SERIE_SERIES = (URL_MAIN + 'series', 'showSeries')
SERIE_HD = (URL_MAIN +'series', 'showMovies')
SERIE_GENRE = (True, 'showGenreSerie')

ANIM_NEWS = (URL_MAIN + 'animes', 'showAnimes')
ANIM_ANIMS = (URL_MAIN + 'animes', 'showAnimes')
ANIM_HD = (URL_MAIN +'animes', 'showMovies')
ANIM_GENRES = (True, 'showGenreAnimes')

URL_SEARCH = ('', 'resultSearch')
FUNCTION_SEARCH = 'resultSearch'

def load():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', URL_MAIN + 'fonctions/recherche.php')
    oGui.addDir(SITE_IDENTIFIER, 'showSearch', 'Recherche', 'search.png', oOutputParameterHandler) 
   
    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MOVIE_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_NEWS[1], 'Films', 'news.png', oOutputParameterHandler)
  
    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MOVIE_MOVIE[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_MOVIE[1], 'Tous Les Films', 'films.png', oOutputParameterHandler)  

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MOVIE_HD[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_HD[1], 'Films HD', 'films.png', oOutputParameterHandler)

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MOVIE_GENRES[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_GENRES[1], 'Films Genre', 'genres.png', oOutputParameterHandler)
       
    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', SERIE_SERIES[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_SERIES[1], 'Series', 'series.png', oOutputParameterHandler)

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', SERIE_HD[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_HD[1], 'Series HD', 'series.png', oOutputParameterHandler)

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', ANIM_ANIMS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_ANIMS[1], 'Animes', 'animes.png', oOutputParameterHandler)
    
    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', ANIM_HD[0] )
    oGui.addDir(SITE_IDENTIFIER, ANIM_HD[1], 'Animes HD', 'animes.png', oOutputParameterHandler)
    oGui.setEndOfDirectory()


def showSearch():
    oGui = cGui()

    sSearchText = oGui.showKeyBoard()
    if (sSearchText != False):
        sUrl = URL_SEARCH[0] + sSearchText
        showMovies(sUrl)
        oGui.setEndOfDirectory()
        return  
    
    
def showGenreMovies():
    oGui = cGui()
 
    liste = []
    liste.append( ['Action',URL_MAIN + 'films-recherche?categorie=Action'] )
    liste.append( ['Animation',URL_MAIN + 'films-recherche?categorie=Animation'] )
    liste.append( ['Aventure',URL_MAIN + 'films-recherche?categorie=Aventure'] )
    liste.append( ['Biopic',URL_MAIN + 'films-recherche?categorie=Biopic'] )
    liste.append( ['Catastrophe',URL_MAIN + 'films-recherche?categorie=Catastrophe'] )
    liste.append( ['Comedie',URL_MAIN + 'films-recherche?categorie=Comédie/'] )
    liste.append( ['Divertissement',URL_MAIN + 'films-recherche?categorie=Divertissement'] )
    liste.append( ['Documentaire',URL_MAIN + 'films-recherche?categorie=Documentaire'] )
    liste.append( ['Drame',URL_MAIN + 'films-recherche?categorie=Drame'] )
    liste.append( ['En cours de classement',URL_MAIN + 'films-recherche?categorie=En cours de classement'] )
    liste.append( ['Epouvante Horreur',URL_MAIN + 'films-recherche?categorie=Epouvante-horreur'] ) 
    liste.append( ['Erotique',URL_MAIN + 'films-recherche?categorie=Erotique'] )
    liste.append( ['Espionnage',URL_MAIN + 'films-recherche?categorie=Espionnage'] )
    liste.append( ['Famille',URL_MAIN + 'films-recherche?categorie=Famille'] )
    liste.append( ['Fantastique',URL_MAIN + 'films-recherche?categorie=Fantastique'] )  
    liste.append( ['Guerre',URL_MAIN + 'films-recherche?categorie=Guerre'] )
    liste.append( ['Historique',URL_MAIN + 'films-recherche?categorie=Histoire'] )
    liste.append( ['Historique',URL_MAIN + 'films-recherche?categorie=Humour'] )
    liste.append( ['Musical',URL_MAIN + 'films-recherche?categorie=Musical'] )
    liste.append( ['Mystère',URL_MAIN + 'films-recherche?categorie=Mystère'] )
    liste.append( ['Policier',URL_MAIN + 'films-recherche?categorie=Policier'] )
    liste.append( ['Romance',URL_MAIN + 'films-recherche?categorie=Romance'] )
    liste.append( ['Science Fiction',URL_MAIN + 'films-recherche?categorie=Science-fiction'] )
    liste.append( ['Spectacle',URL_MAIN + 'films-recherche?categorie=Spectacle'] )
    liste.append( ['Sport',URL_MAIN + 'films-recherche?categorie=Sport'] )
    liste.append( ['Thriller',URL_MAIN + 'films-recherche?categorie=Thriller'] )
    liste.append( ['Western',URL_MAIN + 'films-recherche?categorie=Western'] )
                
    for sTitle,sUrl in liste:
        
        oOutputParameterHandler = cOutputParameterHandler()
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)
       
    oGui.setEndOfDirectory() 


def showGenreSerie():
    oGui = cGui()
    oInputParameterHandler = cInputParameterHandler()
    sUrl = oInputParameterHandler.getValue('siteUrl')
 
    liste = []
    liste.append( ['Action', URL_MAIN + 'series-recherche?categorie=Action'] ) 
    liste.append( ['Animation', URL_MAIN + 'series-recherche?categorie=Animation'] )
    liste.append( ['Aventure', URL_MAIN + 'series-recherche?categorie=Aventure'] )
    liste.append( ['Biopic', URL_MAIN + 'series-recherche?categorie=Biopic'] )
    liste.append( ['Comedie', URL_MAIN + 'series-recherche?categorie=Comédie'] )
    liste.append( ['Drame', URL_MAIN + 'series-recherche?categorie=Drame'] )
    liste.append( ['Epouvante Horreur', URL_MAIN + 'series-recherche?categorie=Epouvante-horreur'] )
    liste.append( ['Espionnage', URL_MAIN + 'series-recherche?categorie=Espionnage'] )
    liste.append( ['Fantastique', URL_MAIN + 'series-recherche?categorie=Fantastique'] )
    liste.append( ['Famille', URL_MAIN + 'series-recherche?categorie=Famille'] )
    liste.append( ['Guerre', URL_MAIN + 'series-recherche?categorie=Guerre'] )
    liste.append( ['Historique', URL_MAIN + 'series-recherche?categorie=Histoire'] )
    liste.append( ['Humour', URL_MAIN + 'series-recherche?categorie=Humour'] )
    liste.append( ['Musical', URL_MAIN + 'series-recherche?categorie=Musical'] )
    liste.append( ['Policier', URL_MAIN + 'series-recherche?categorie=Policier'] )
    liste.append( ['Romance', URL_MAIN + 'series-recherche?categorie=Romance'] )
    liste.append( ['Science Fiction', URL_MAIN + 'series-recherche?categorie=Science-fiction'] )

   
    for sTitle,sUrl in liste:
       
        oOutputParameterHandler = cOutputParameterHandler()
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)
       
oGui.setEndOfDirectory()
   def resultSearch(sSearch):
    
    oGui = cGui()
    oInputParameterHandler = cInputParameterHandler()
        
    sUrl = "http://mega-stream.fr/recherche"
    
    #oInputParameterHandler.getAllParameter()
    #sSearch = urllib.unquote(sSearch)

    post_data = {'search' : sSearch }
        
    UA = 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'
    headers = {'User-Agent': UA ,
               'Host' : 'mega-stream.fr'}
    
    req = urllib2.Request(sUrl , urllib.urlencode(post_data), headers)
    
    response = urllib2.urlopen(req)
    sHtmlContent = response.read()
    response.close()
    
    sPattern = '<div class="movie-img img-box">\s*<img.+?src="([^"]+)".+?<a href="([^"]+)"[^<>]+>([^<>]+)<\/a>.+?<span[^<>]+>([^<>]+)<\/span>'
    
    oParser = cParser()
    aResult = oParser.parse(sHtmlContent, sPattern)
    
    if (aResult[0] == True):
        total = len(aResult[1])
        dialog = cConfig().createDialog(SITE_NAME)
        for aEntry in aResult[1]:
            cConfig().updateDialog(dialog, total)
            if dialog.iscanceled():
                break

            sQual = ""
            if aEntry[3]:
                sQual = '[' + aEntry[3] + '] '
            siteUrl = aEntry[1]
            sThumbnail = aEntry[0]
            sTitle = aEntry[2]
            
            sDisplayTitle = cUtil().DecoTitle(sTitle + sQual)
            
            xbmc.log(siteUrl)
            
            oOutputParameterHandler = cOutputParameterHandler()
            oOutputParameterHandler.addParameter('siteUrl', siteUrl)
            oOutputParameterHandler.addParameter('sMovieTitle', sTitle)
            oOutputParameterHandler.addParameter('sThumbnail', sThumbnail)
            if '-serie' in siteUrl:
                oGui.addTV(SITE_IDENTIFIER, 'showEpisode', sDisplayTitle, 'films.png', sThumbnail, '', oOutputParameterHandler)
            elif '-mangas-' in siteUrl:
                oGui.addTV(SITE_IDENTIFIER, 'showEpisode', sDisplayTitle, 'films.png', sThumbnail, '', oOutputParameterHandler)
            else:
                oGui.addMovie(SITE_IDENTIFIER, 'showHosters', sDisplayTitle, 'films.png', sThumbnail, '', oOutputParameterHandler)
        
        cConfig().finishDialog(dialog)
      

def showMovies(sSearch = ''):
    oGui = cGui()
    
    if sSearch:
        sUrl = sSearch
    else:
        oInputParameterHandler = cInputParameterHandler()
        sUrl = oInputParameterHandler.getValue('siteUrl')
        
    xbmc.log(sUrl)
        
    oRequestHandler = cRequestHandler(sUrl)
    sHtmlContent = oRequestHandler.request()
    
    oParser = cParser()
    
    sPattern = '<img[^<>]+src="([^"]+)" class="tubeposter".+?<span[^<>]+>([^<>]+)*<\/span>.+?<a class="movie-title" href="([^"]+)"[^<>]+>([^<>]+)<.+?<b>Description :<\/b>([^><]+)<'
    aResult = oParser.parse(sHtmlContent, sPattern)
   
    if (aResult[0] == True):
        total = len(aResult[1])
        dialog = cConfig().createDialog(SITE_NAME)
        for aEntry in aResult[1]:
            cConfig().updateDialog(dialog, total)
            if dialog.iscanceled():
                break
            
            sQual = ''
            #sAnnee = aEntry[3]
            sThumbnail = aEntry[0]
            if aEntry[1]:
                sQual = '[' + aEntry[1] + ']'
            siteUrl = aEntry[2]
            sTitle = aEntry[3]
            if '-films' in sUrl:
                sTitle = sTitle.split('-')[1]
            sCom = aEntry[4]
            
            sDisplayTitle = cUtil().DecoTitle(sTitle + sQual)

            oOutputParameterHandler = cOutputParameterHandler()
            oOutputParameterHandler.addParameter('siteUrl', siteUrl)
            oOutputParameterHandler.addParameter('sMovieTitle', sTitle)
            oOutputParameterHandler.addParameter('sThumbnail', sThumbnail)
            if '-mangas' in sUrl:
                oGui.addTV(SITE_IDENTIFIER, 'showEpisode', sDisplayTitle, 'films.png', sThumbnail, sCom, oOutputParameterHandler)
            elif '-serie' in sUrl:
                oGui.addTV(SITE_IDENTIFIER, 'showEpisode', sDisplayTitle, 'films.png', sThumbnail, sCom, oOutputParameterHandler)
            else:
                oGui.addMovie(SITE_IDENTIFIER, 'showHosters', sDisplayTitle, 'films.png', sThumbnail, sCom, oOutputParameterHandler)
           
        cConfig().finishDialog(dialog)
 
        #Affichage page suivante
        sNextPage = __checkForNextPage(sHtmlContent)
        if (sNextPage != False):
            oOutputParameterHandler = cOutputParameterHandler()
            oOutputParameterHandler.addParameter('siteUrl', sNextPage)
            oGui.addNext(SITE_IDENTIFIER, 'showMovies', '[COLOR teal]Next >>>[/COLOR]' , oOutputParameterHandler)
 
    oGui.setEndOfDirectory()
    
def __checkForNextPage(sHtmlContent):
    
    sPattern = '<span class="pnext"><a href="([^"]+)"'
    oParser = cParser()
    aResult = oParser.parse(sHtmlContent, sPattern)
    
    if (aResult[0] == True):
        sUrl = aResult[1][0]     
        return sUrl 
 
    return False

def showEpisode():
    oGui = cGui()
    oInputParameterHandler = cInputParameterHandler()
    sUrl = oInputParameterHandler.getValue('siteUrl')
    sMovieTitle = oInputParameterHandler.getValue('sMovieTitle')
    sThumbnail = oInputParameterHandler.getValue('sThumbnail')

    oRequestHandler = cRequestHandler(sUrl)
    sHtmlContent = oRequestHandler.request()

    sPattern = '<a href="(#saison[0-9]+)">(.+?)<\/a>|href="([^"]+/[0-9]+)">(.+?)<\/a><\/li>'
    aResult = re.findall(sPattern,sHtmlContent)

    if (aResult):
        total = len(aResult)
        dialog = cConfig().createDialog(SITE_NAME)
        sSaison = ''
        for aEntry in aResult:
            cConfig().updateDialog(dialog, total)
            if dialog.iscanceled():
                break

            if aEntry[0]:
                sSaison = aEntry[1]
                oGui.addText(SITE_IDENTIFIER, '[COLOR olive]'+ sSaison+ '[/COLOR]')
                
            else:
                sTitle = sMovieTitle + ' ' + sSaison + ' ' + aEntry[3]
                sUrl = aEntry[2]
                sDisplayTitle = cUtil().DecoTitle(sTitle)
                
                oOutputParameterHandler = cOutputParameterHandler()
                oOutputParameterHandler.addParameter('siteUrl', sUrl)
                oOutputParameterHandler.addParameter('sMovieTitle', sTitle)
                oOutputParameterHandler.addParameter('sThumbnail', str(sThumbnail))
                oGui.addMovie(SITE_IDENTIFIER, 'showHosters', sDisplayTitle, '', sThumbnail, '', oOutputParameterHandler)

        cConfig().finishDialog(dialog) 

    oGui.setEndOfDirectory()

def showHosters():
    oGui = cGui()
    oInputParameterHandler = cInputParameterHandler()
    sUrl = oInputParameterHandler.getValue('siteUrl')
    sMovieTitle = oInputParameterHandler.getValue('sMovieTitle')
    sThumbnail = oInputParameterHandler.getValue('sThumbnail')

    oRequestHandler = cRequestHandler(sUrl)
    sHtmlContent = oRequestHandler.request()
    
    #on recupere d'abord les liens
    sPattern = '<div id="(lecteur_[0-9]+)">.+?data-tnetnoc-crs="([^"]+)"'
    tablink = re.findall(sPattern,sHtmlContent, re.DOTALL)
    
    #xbmc.log(str(tablink))

    #le classique
    sPattern = '<a href="#(lecteur_[0-9]+)".+?title="([^"]+)"\/> *([^<>]+)<\/a'
    aResult = re.findall(sPattern,sHtmlContent, re.DOTALL)

    if (aResult):
        total = len(aResult)
        dialog = cConfig().createDialog(SITE_NAME)
        for aEntry in aResult:
            cConfig().updateDialog(dialog, total)
            if dialog.iscanceled():
                break
            
            sQual = aEntry[2]
            sLang = aEntry[1]
            sDisplayTitle = '[' + sQual + '/' + sLang + ']' + sMovieTitle
            sDisplayTitle = cUtil().DecoTitle(sDisplayTitle)
            
            url = ''
            for i,j in tablink:
                if i == aEntry[0]:
                    url = base64.b64decode(j)[::-1]

            sHosterUrl = url
            oHoster = cHosterGui().checkHoster(sHosterUrl)
 
            if (oHoster != False):
                oHoster.setDisplayName(sDisplayTitle)
                oHoster.setFileName(sMovieTitle)
                cHosterGui().showHoster(oGui, oHoster, sHosterUrl, sThumbnail)

        cConfig().finishDialog(dialog) 

    oGui.setEndOfDirectory()

def showTop():
    oGui = cGui()
    oInputParameterHandler = cInputParameterHandler()
    sUrl = oInputParameterHandler.getValue('siteUrl')
   
    oRequestHandler = cRequestHandler(sUrl)
    sHtmlContent = oRequestHandler.request()
    oParser = cParser()
    
    sPattern = '<li class="tops-item">.+?<a href="([^"]+)".+?<img src="([^"]+)" alt="([^"]+)"'

    aResult = oParser.parse(sHtmlContent, sPattern)
   
    if (aResult[0] == True):
        total = len(aResult[1])
        dialog = cConfig().createDialog(SITE_NAME)
        for aEntry in aResult[1]:
            cConfig().updateDialog(dialog, total)
            if dialog.iscanceled():
                break
           
            sThumbnail = aEntry[1]
            sUrl = aEntry[0]
            sTitle = aEntry[2]
            
            sDisplayTitle = cUtil().DecoTitle(sTitle)

            oOutputParameterHandler = cOutputParameterHandler()
            oOutputParameterHandler.addParameter('siteUrl', sUrl)
            oOutputParameterHandler.addParameter('sMovieTitle', sTitle)
            oOutputParameterHandler.addParameter('sThumbnail', sThumbnail)
            if '-films-' in sUrl:
                oGui.addMovie(SITE_IDENTIFIER, 'showHosters', sDisplayTitle, 'films.png', sThumbnail, '', oOutputParameterHandler)
            else:
                oGui.addTV(SITE_IDENTIFIER, 'showEpisode', sDisplayTitle, 'series.png', sThumbnail, '', oOutputParameterHandler)
           
        cConfig().finishDialog(dialog)

oGui.setEndOfDirectory()
    sPattern = '<div class="navigation".+? <span.+? <a href="(.+?)">'
    aResult = oParser.parse(sHtmlContent, sPattern)
    print aResult #affiche le result dans le log
    if (aResult[0] == True):
        return aResult[1][0]

    return False
    

def showHosters():# recherche et affiche les hotes
    oGui = cGui() #ouvre l'affichage
    oInputParameterHandler = cInputParameterHandler() #apelle l'entree de paramettre
    sUrl = oInputParameterHandler.getValue('siteUrl')  # apelle siteUrl
    sMovieTitle = oInputParameterHandler.getValue('sMovieTitle') #apelle le titre
    sThumbnail = oInputParameterHandler.getValue('sThumbnail') # apelle le poster
    
    oRequestHandler = cRequestHandler(sUrl) #requete sur l'url
    sHtmlContent = oRequestHandler.request(); #requete sur l'url    

    oParser = cParser()
    sPattern = '<iframe.+?src="(.+?)"'
    #ici nous cherchont toute les sources iframe
    
    aResult = oParser.parse(sHtmlContent, sPattern)
    #pensez a faire un xbmc.log(str(aResult)) pour verifier
    
    #si un lien ne s'affiche pas peux etre que l'hote n'est pas supporte par l'addon
    if (aResult[0] == True):
        for aEntry in aResult[1]:
            
            sHosterUrl = str(aEntry)
            oHoster = cHosterGui().checkHoster(sHosterUrl) #recherche l'hote dans l'addon
            if (oHoster != False):
                oHoster.setDisplayName(sMovieTitle) #nom affiche
                oHoster.setFileName(sMovieTitle) # idem
                cHosterGui().showHoster(oGui, oHoster, sHosterUrl, sThumbnail) 
                #affiche le lien (oGui, oHoster, url du lien, poster)
                
    oGui.setEndOfDirectory() #fin
   
def seriesHosters(): #cherche les episodes de series
    oGui = cGui()
    oInputParameterHandler = cInputParameterHandler()
    sUrl = oInputParameterHandler.getValue('siteUrl')
    sMovieTitle = oInputParameterHandler.getValue('sMovieTitle')
    sThumbnail = oInputParameterHandler.getValue('sThumbnail')
    
    oRequestHandler = cRequestHandler(sUrl)
    sHtmlContent = oRequestHandler.request()
               
    sPattern = '<dd><a href="([^<]+)" class="zoombox.+?" title="(.+?)"><button class="btn">.+?</button></a></dd>'
    oParser = cParser()
    aResult = oParser.parse(sHtmlContent, sPattern)
    if (aResult[0] == True):
        for aEntry in aResult[1]:
            
            sHosterUrl = str(aEntry[0])
            oHoster = cHosterGui().checkHoster(sHosterUrl)
            if (oHoster != False):
                oHoster.setDisplayName(aEntry[1])
                oHoster.setFileName(aEntry[1])
                cHosterGui().showHoster(oGui, oHoster, sHosterUrl, sThumbnail) 
                
    oGui.setEndOfDirectory()
